---

ansible_python_interpreter: "python"
location: "{{ cloud_provider_location }}"
credentials:
  aws:
    username: 'admin'
    password: 'Paloalto123'
  azure:
    username: 'fwadmin'
    password: 'Paloalto123'

username: "{{ credentials[cloud_provider]['username'] }}"
password: "{{ credentials[cloud_provider]['password'] }}"
fw_key_name:

virtual_networks:
#  - Web-Azure
#  - Transit-Azure
   - VPCTransit


# removed "external" for testing
# TODO: Re-add external after licensing resolved
cm_virtual_router:
#  - 'trust'
#  - 'untrust'
#  - 'anton_test'
   - 'default'

cm_mgmt_profile:
   - name: 'AWS-MGT'
     permitted_network:
         - "172.26.0.0/12"
         - "10.0.0.0/8"
         - "168.63.129.16/32"
     https: true
     ssh: true

cm_interface:
  - name: 'ethernet1/1'
    virtual_router: 'default'
    zone: "untrust"
    dhcp: true
    mgmt_profile: 'AWS-MGT'
    state: 'present'
  - name: 'ethernet1/2'
    virtual_router: 'default'
    zone: "trust"
    dhcp: true
    mgmt_profile: 'AWS-MGT'
    state: 'present'
##   - name: 'tunnel.500'
##     ip: '10.1.5.1'
##     mask: 24
#     mgmt_profile: 'AzureProbe'
#     virtual_router: 'trust'
#     zone: "test3"

cm_object_address:
   - name: 'site-a-internal'
     ip-range: '10.1.1.0-10.1.2.255'
   - name: 'site-b-internal'
     ip-range: '10.2.1.0-10.2.2.255'
   - name: 'google-dns-1'
     ip: '8.8.8.8/32'
   - name: 'google-dns-2'
     ip: '8.8.4.4/32'
   - name: 'ip-chicken'
     fqdn: 'www.ipchicken.com'


#cm_object_service:
#   - name: 'http-alt'
#     port: '8000'
#     protocol: 'tcp'
#   - name: 'dns'
#     port: '53'
#     protocol: 'udp'
#
#cm_object_service_group:
#   - name: 'http-all'
#     services:
#      - 'http-alt'
#      - 'service-http'
#
#cm_object_address_group:
#   - name: 'public-servers'
#     addresses:
#      - 'google-dns-1'
#      - 'ip-chicken'
#
#cm_object_app_group:
#   - name: 'ping-all'
#     apps:
#      - 'icmp'
#      - 'ping'

cm_ntp:
   ntp_primary: '129.6.15.32'
   ntp_secondary: '128.138.141.177'

cm_dns:
   dns_primary: '8.8.8.8'
   dns_secondary: '1.1.1.1'

#cm_panorama1:
#   primary: '8.8.8.8'
#   secondary: '1.1.1.1'
#
cm_fw_user:
   - username: 'jdoe_test'
     password: 'TheBestPassword'
     role: "devicereader"
   - username: 'ntc'
     password: 'The2ndBestPassword'
     role: "deviceadmin"
   - username: 'pa1'
     password: 'The3rdBestPassword'
     role: "superreader"
#
#
# # Create Security Rules
cm_security_rule:
   - name: 'Allow Any'
     action: 'allow'
     disabled: 'no'
     to_zone:
       - 'any'
     from_zone:
       - 'any'
     application:
       - 'any'
     category:
      - 'any'
     source_user:
      - 'any'
     hip_profiles:
      - 'any'
     rule_type: 'universal'
   - name: 'OutsideWebServer'
     action: 'allow'
     disabled: 'no'
     to_zone:
       - 'untrust'
     from_zone:
       - 'trust'
     source:
       - 'site-a-internal'
     destination:
       - 'any'
     application:
       - 'any'
     service:
       - 'any'
     tags:
      - 'Outbound'
     category:
      - 'any'
     source_user:
      - 'any'
     hip_profiles:
      - 'any'
     rule_type: 'universal'
   - name: 'InsideWebServer'
     action: 'allow'
     disabled: 'no'
     to_zone:
       - 'untrust'
     from_zone:
       - 'trust'
     source:
       - 'site-a-internal'
     destination:
       - 'any'
     application:
       - 'any'
     service:
       - 'any'
     tags:
      - 'Outbound'
     category:
      - 'any'
     source_user:
      - 'any'
     hip_profiles:
      - 'any'
     rule_type: 'universal'

#cm_nat_rule:
#   - name: 'NAT default Outbound'
#     source:
#       zone: "trust"
#       network:
#       - 'any'
#     destination:
#       zone: "untrust"
#       network:
#       - 'any'
#       translation:
#         ip:
#           - ''
#         interface: 'ethernet1/1'
#     service: 'any'
#
#   - name: 'Inbound-NAT-to-DMZ-Server1'
#     source:
#      zone: "untrust"
#      network:
#        - 'any'
#     destination:
#      zone: "untrust"
#      network: "public-servers"
#      translation:
#      ip:
#        - 'google-dns-1'
#     service: 'any'

#Create Static Routes
#cm_panos_static_route:
#  - name: 'DefaultGW_trust'
#    destination: '0.0.0.0/0'
#    nexthop: 'untrust'
#    virtual_router: 'default'
#    nexthop_type: 'next-vr'
#  - name: 'DefaultGW_Untrust'
#    destination: '0.0.0.0/0'
#    nexthop: '10.217.127.1/32'
#    interface: 'ethernet1/1'
#    nexthop_type: 'ip-address'
#    virtual_router: 'default'

#cm_panos_software:
#   values:
#     version: '8.1.1'
#     restart: false


cm_panos_ipsec_profile:
  - name: 'test_ipsec_profile1'
    state: 'present'
    encryption:
      - aes-256-cbc
      - aes-128-cbc
    authentication:
      - sha256
      - sha1
    dhgroup: group5
    lifetime_hrs: '2'
  - name: 'test_ipsec_profile2'
    state: 'present'
    encryption:
      - aes-256-cbc
    authentication:
      - sha1
    dhgroup: group2
    lifetime_hrs: '1'

cm_panos_ike_profile:
  - name: 'test_ike_profile1'
    state: 'present'
    encryption:
      - aes-256-cbc
      - aes-128-cbc
    authentication:
      - sha256
      - sha384
    dhgroup:
      - group2
      - group5
    lifetime_sec: '28800'
  - name: 'test_ike_profile2'
    state: 'present'
    encryption:
      - aes-256-cbc
    authentication:
      - sha1
    dhgroup:
      - group2
    lifetime_sec: '28800'

cm_panos_ike_gateway1:
    state: 'present'
    filter: 'gateway'
    #liveness_check: '5'
    passive_mode: False
    protocol_version: 'ikev1'
    interface: 'ethernet1/1'
    crypto_profile_name: 'test_ike_profile2'
    nat_traversal: False
    fragmentation: False
    dead_peer_detection: True
    dead_peer_detection_interval: 10
    dead_peer_detection_retry: 3
    ikev1_exchange_mode: "main"

cm_panos_spoke_tunnel1:
    zone: 'spoke-zone'
    vr_name: 'default'
    filter: 'tunnel'
    begin_tunnel_number: 500
    cidr_notation: '/30'

cm_panos_ipsec_tunnel1:
    suffix: 'spoke1-ipsec'
    ipsec_profile: 'test_ipsec_profile2'
    filter: 'ipsec'
    begin_tunnel_number: 500
# cm_panos_lic:
#   values:
#     auth_code: '<AUTH CODE>'